// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution{
    public:
    int findSubString(string str)
    {
        unordered_map<char,int> freq;
        unordered_set<char> present;
        int n = str.length();
        for(int i=0; i<n; i++){
            present.insert(str[i]);
        }
        int totalLetters = present.size();
        if(totalLetters==n) return n;
        int allpresent=0, ans = n, windowStart=0;
        for(int i=0; i<n; i++){
            freq[str[i]]++;
            if(freq[str[i]]==1){
                allpresent++;
            }
            if(allpresent==totalLetters){
                int j=windowStart;
                while(j<i && freq[str[j]]>1){
                    freq[str[j]]--;
                    j++;
                }
                windowStart = j;
                ans = min(ans, i-windowStart+1);
            }
        }
        return ans;
    }
};

// { Driver Code Starts.
// Driver code
int main() {
    int t;
    cin >> t;
    while (t--) {

        string str;
        cin >> str;
        Solution ob;
        cout << ob.findSubString(str) << endl;
    }
    return 0;
}  // } Driver Code Ends
